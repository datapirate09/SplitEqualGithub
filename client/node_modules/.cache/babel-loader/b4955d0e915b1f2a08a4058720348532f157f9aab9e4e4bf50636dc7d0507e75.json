{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\srina\\\\OneDrive\\\\Desktop\\\\FinalProject\\\\client\\\\src\\\\components\\\\Feature.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport FeatureValue from \"./FeatureValue.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Feature() {\n  _s();\n  const customStyle = {\n    display: \"flex\",\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    textAlign: \"center\",\n    alignItems: \"center\",\n    gap: \"120px\",\n    paddingTop: \"80px\",\n    paddingBottom: \"100px\"\n  };\n  const headStyle = {\n    textAlign: \"center\",\n    fontSize: \"2.5rem\",\n    fontFamily: \"Source Code Pro, monospace\"\n  };\n  const headerStyle = {\n    backgroundColor: \"#f8c291\",\n    paddingTop: \"120px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingLeft: \"30px\",\n    paddingRight: \"30px\"\n  };\n  const sectionRef = useRef(null);\n  useEffect(() => {\n    const observer = new IntersectionObserver((entries, observer) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add(\"section_para--visible\");\n          observer.unobserve(entry.target);\n        }\n      });\n    }, {\n      threshold: 0.5\n    });\n    observer.observe(sectionRef.current);\n\n    // Cleanup the observer when the component is unmounted\n    return () => observer.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: sectionRef,\n    style: headerStyle,\n    className: \"section_para\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: headStyle,\n      children: \"SplitFeatures Crafted For SplitUsers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flexcontainer\",\n      style: customStyle,\n      children: [/*#__PURE__*/_jsxDEV(FeatureValue, {\n        imgsrc: \"../../free.svg\",\n        content: \"Add unlimited number of expenses for free\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FeatureValue, {\n        imgsrc: \"../../friends.svg\",\n        content: \"Create a SplitGroup to add group expenses\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FeatureValue, {\n        imgsrc: \"../../money.svg\",\n        content: \"Complete Transactions on the go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n}\n_s(Feature, \"O9MYfDkQexHh+zrn37J6HLSAdf8=\");\n_c = Feature;\nexport default Feature;\nvar _c;\n$RefreshReg$(_c, \"Feature\");","map":{"version":3,"names":["React","FeatureValue","jsxDEV","_jsxDEV","Feature","_s","customStyle","display","flexDirection","justifyContent","textAlign","alignItems","gap","paddingTop","paddingBottom","headStyle","fontSize","fontFamily","headerStyle","backgroundColor","paddingLeft","paddingRight","sectionRef","useRef","useEffect","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","target","classList","add","unobserve","threshold","observe","current","disconnect","ref","style","className","children","fileName","_jsxFileName","lineNumber","columnNumber","imgsrc","content","_c","$RefreshReg$"],"sources":["C:/Users/srina/OneDrive/Desktop/FinalProject/client/src/components/Feature.jsx"],"sourcesContent":["import React from \"react\";\r\nimport FeatureValue from \"./FeatureValue.jsx\";\r\nfunction Feature(){\r\n    const customStyle={\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\",\r\n        alignItems: \"center\",\r\n        gap: \"120px\",\r\n        paddingTop:\"80px\",\r\n        paddingBottom:\"100px\"\r\n    }\r\n    const headStyle={\r\n        textAlign:\"center\",\r\n        fontSize:\"2.5rem\",\r\n        fontFamily:\"Source Code Pro, monospace\"\r\n    }\r\n    const headerStyle={\r\n        backgroundColor:\"#f8c291\",\r\n        paddingTop:\"120px\",\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        justifyContent:\"center\",\r\n        alignItems:\"center\",\r\n        paddingLeft:\"30px\",\r\n        paddingRight:\"30px\"\r\n    }\r\n\r\n\r\n    const sectionRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries, observer) => {\r\n      entries.forEach((entry) => {\r\n        if (entry.isIntersecting) {\r\n          entry.target.classList.add(\"section_para--visible\");\r\n          observer.unobserve(entry.target);\r\n        }\r\n      });\r\n    }, { threshold: 0.5 });\r\n\r\n    observer.observe(sectionRef.current);\r\n\r\n    // Cleanup the observer when the component is unmounted\r\n    return () => observer.disconnect();\r\n  }, []);\r\n\r\n\r\n    return (\r\n        <div ref={sectionRef} style={headerStyle} className=\"section_para\">\r\n            <h2 style={headStyle}>SplitFeatures Crafted For SplitUsers</h2>\r\n            <div className=\"flexcontainer\" style={customStyle}>\r\n                <FeatureValue imgsrc=\"../../free.svg\" content=\"Add unlimited number of expenses for free\"/>\r\n                <FeatureValue imgsrc=\"../../friends.svg\" content=\"Create a SplitGroup to add group expenses\"/>\r\n                <FeatureValue imgsrc=\"../../money.svg\" content=\"Complete Transactions on the go\"/>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default Feature;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}